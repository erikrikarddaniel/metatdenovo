/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    nf-core/metatdenovo Nextflow config file
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Default config options for all compute environments
----------------------------------------------------------------------------------------
*/

// Global default params, used in configs
params {

    // Input options
    input                        = null
    user_assembly                = null
    user_assembly_name           = 'user_assembly'
    genomes                      = null
    user_orfs_faa                = null
    user_orfs_gff                = null
    user_orfs_name               = 'user_orfs'
    se_reads                     = false
    validationSkipDuplicateCheck = false
    validationS3PathCheck        = false

    // QC options
    skip_qc                     = false
    skip_fastqc                 = false

    // Trimming options
    clip_r1                     = null
    clip_r2                     = null
    three_prime_clip_r1         = null
    three_prime_clip_r2         = null
    trim_nextseq                = null
    save_trimmed                = false
    skip_trimming               = false

    // BBDuk options
    sequence_filter             = null

    // Digital normalization options
    bbnorm                      = false
    bbnorm_target               = 100
    bbnorm_min                  = 5
    save_bbnorm_fastq           = false

    // assembler option
    assembler                   = ''
    min_contig_length           = 0
    spades_flavor               = 'rna'
    save_formatspades           = false

    // Mapping options
    save_samtools               = false
    save_bam                    = false
    bbmap_minid                 = 0.9

    // orf caller options
    orf_caller                  = ''
    prodigal_trainingfile       = null
    prokka_batchsize            = 10.MB

    // HMMSEARCH options
    hmmdir                      = null
    hmmpattern                  = '*.hmm'
    hmmfiles                    = null

    // Eggnog options
    eggnog_dbpath               = 'eggnog'
    skip_eggnog                 = false

    // KOfamscan options
    skip_kofamscan              = false
    kofam_dir                   = './kofam/'

    // Taxonomy options
    diamond_dbs                 = ''
    diamond_top                 = 10
    eukulele_db                 = ''
    skip_eukulele               = false
    eukulele_dbpath             = './eukulele/'
    eukulele_method             = 'mets'

    // MultiQC options
    multiqc_config             = null
    multiqc_title              = null
    multiqc_logo               = null
    max_multiqc_email_size     = '25.MB'
    multiqc_methods_description = null

    // Boilerplate options
    outdir                       = './results'
    publish_dir_mode             = 'copy'
    email                        = null
    email_on_fail                = null
    plaintext_email              = false
    monochrome_logs              = false
    hook_url                     = null
    help                         = false
    help_full                    = false
    show_hidden                  = false
    version                      = false
    pipelines_testdata_base_path = 'https://raw.githubusercontent.com/nf-core/test-datasets/'
    trace_report_suffix          = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
    config_profile_name        = null
    config_profile_description = null

    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    config_profile_contact     = null
    config_profile_url         = null

    // Schema validation default options
    validate_params            = true
}

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

profiles {
    debug {
        dumpHashes              = true
        process.beforeScript    = 'echo $HOSTNAME'
        cleanup                 = false
        nextflow.enable.configProcessNamesValidation = true
    }
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    test                { includeConfig 'conf/test.config'              }
    test_filter         { includeConfig 'conf/test_filter.config'       }
    test_full           { includeConfig 'conf/test_full.config'         }
    test_prokka         { includeConfig 'conf/test_prokka.config'       }
    test_transdecoder   { includeConfig 'conf/test_transdecoder.config' }
    test_eggnog         { includeConfig 'conf/test_eggnog.config'       }
    test_eukulele       { includeConfig 'conf/test_eukulele.config'     }
    test_kofamscan      { includeConfig 'conf/test_kofamscan.config'    }
    test_spades         { includeConfig 'conf/test_spades.config'    }
    gitpod {
        executor.name           = 'local'
        executor.cpus           = 4
        executor.memory         = 8.GB
        process {
            resourceLimits = [
                memory: 8.GB,
                cpus  : 4,
                time  : 1.h
            ]
        }
    }
}

// Load nf-core custom profiles from different Institutions
includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/nfcore_custom.config" : "/dev/null"

// Load nf-core/metatdenovo custom profiles from different institutions.
// includeConfig !System.getenv('NXF_OFFLINE') && params.custom_config_base ? "${params.custom_config_base}/pipeline/metatdenovo.config" : "/dev/null"

// Set default registry for Apptainer, Docker, Podman, Charliecloud and Singularity independent of -profile
// Will not be used unless Apptainer / Docker / Podman / Charliecloud / Singularity are enabled
// Set to your registry if you have a mirror of containers
apptainer.registry    = 'quay.io'
docker.registry       = 'quay.io'
podman.registry       = 'quay.io'
singularity.registry  = 'quay.io'
charliecloud.registry = 'quay.io'

// Export these variables to prevent local Python/R libraries from conflicting with those in the container
// The JULIA depot path has been adjusted to a fixed path `/usr/local/share/julia` that needs to be used for packages in the container.
// See https://apeltzer.github.io/post/03-julia-lang-nextflow/ for details on that. Once we have a common agreement on where to keep Julia packages, this is adjustable.

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Set bash options
process.shell = [
    "bash",
    "-C",         // No clobber - prevent output redirection from overwriting files.
    "-e",         // Exit if a tool returns a non-zero status/exit code
    "-u",         // Treat unset variables and parameters as an error
    "-o",         // Returns the status of the last command to exit..
    "pipefail"    //   ..with a non-zero status or zero if all successfully execute
]

// Disable process selector warnings by default. Use debug profile to enable warnings.
nextflow.enable.configProcessNamesValidation = false

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

manifest {
    name            = 'nf-core/metatdenovo'
    author          = """Danilo Di Leo, Emelie Nilsson & Daniel Lundin""" // The author field is deprecated from Nextflow version 24.10.0, use contributors instead
    contributors    = [
        [
            name: 'Danilo Di Leo',
            affiliation: 'Linnaeus University, Kalmar, Sweden',
            email: 'danilo.dileo@lnu.se',
            github: '@danilodileo',
            contribution:  [ 'author', 'maintainer' ],
            orcid: ''
        ],
        [
            name: ' Emelie Nilsson',
            affiliation: 'Linnaeus University, Kalmar, Sweden',
            email: 'emelie.nilsson@lnu.se',
            github: '@emnilsson',
            contribution:  [ 'author'],
            orcid: 'https://orcid.org/0000-0001-5103-214X'
        ],
        [
            name: 'Daniel Lundin',
            affiliation: 'Linnaeus University, Kalmar, Sweden',
            email: 'matricaria.suaveolens@gmail.com',
            github: '@erikrikarddaniel',
            contribution: [ 'author', 'maintainer' ],
            orcid: 'https://orcid.org/0000-0002-8779-6464'
        ]
    ]
    homePage        = 'https://github.com/nf-core/metatdenovo'
    description     = """Assembly and annotation of metatranscriptomic data, both prokaryotic and eukaryotic"""
    mainScript      = 'main.nf'
    defaultBranch   = 'master'
    nextflowVersion = '!>=24.04.2'
    version         = '1.1'
    doi             = ''
}

// Nextflow plugins
plugins {
    id 'nf-schema@2.3.0' // Validation of pipeline parameters and creation of an input channel from a sample sheet
}

validation {
    defaultIgnoreParams = ["genomes"]
    monochromeLogs = params.monochrome_logs
    lenientMode = true
    help {
        enabled = true
        command = "nextflow run $manifest.name -profile <docker/singularity/.../institute> --input samplesheet.csv --outdir <OUTDIR>"
        fullParameter = "help_full"
        showHiddenParameter = "show_hidden"
        beforeText = """
-\033[2m----------------------------------------------------\033[0m-
                                        \033[0;32m,--.\033[0;30m/\033[0;32m,-.\033[0m
\033[0;34m        ___     __   __   __   ___     \033[0;32m/,-._.--~\'\033[0m
\033[0;34m  |\\ | |__  __ /  ` /  \\ |__) |__         \033[0;33m}  {\033[0m
\033[0;34m  | \\| |       \\__, \\__/ |  \\ |___     \033[0;32m\\`-._,-`-,\033[0m
                                        \033[0;32m`._,._,\'\033[0m
\033[0;35m  ${manifest.name} ${manifest.version}\033[0m
-\033[2m----------------------------------------------------\033[0m-
"""
        afterText = """${manifest.doi ? "* The pipeline\n" : ""}${manifest.doi.tokenize(",").collect { "  https://doi.org/${it.trim().replace('https://doi.org/','')}"}.join("\n")}${manifest.doi ? "\n" : ""}
* The nf-core framework
    https://doi.org/10.1038/s41587-020-0439-x

* Software dependencies
    https://github.com/${manifest.name}/blob/master/CITATIONS.md
"""
    }
    summary {
        beforeText = validation.help.beforeText
        afterText = validation.help.afterText
    }
}

// Load modules.config for DSL2 module specific options
includeConfig 'conf/modules.config'
